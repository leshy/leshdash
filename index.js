// Generated by LiveScript 1.4.0
(function(){
  var lodash, lib, slice$ = [].slice;
  lodash = require('lodash');
  lib = {};
  lib.jsonQuery = function(path, object){
    if (path.constructor === String) {
      path = path.split('.');
    }
    if (!path.length) {
      return object;
    } else {
      return lib.jsonQuery(lodash.tail(path), object[lodash.head(path)]);
    }
  };
  lib.jsonError = function(error){
    var serializeError;
    serializeError = function(error){
      return {
        stack: error.stack,
        name: error.name,
        message: error.message
      };
    };
    switch (error.constructor) {
    case Error:
      return serializeError(error);
    default:
      return {
        name: error.constructor.name,
        message: String(error)
      };
    }
  };
  lib.wait = function(t, f){
    return setTimeout(f, t);
  };
  lib.lazy = function(f){
    var res;
    res = {};
    return function(){
      var args;
      args = slice$.call(arguments);
      if (res.promise) {
        return res.promise;
      } else {
        return res.promise = f.apply(this, args);
      }
    };
  };
  module.exports = lodash.assign(lib, lodash);
}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xlc2gvY29kaW5nL3Jlc2JvdS9jb3JlL25vZGVfbW9kdWxlcy9sZXNoZGFzaC9pbmRleC5scyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7RUFFVyxNQUFBLENBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxRQUFBO0VBRVgsR0FBSSxDQUFBLENBQUEsQ0FBRTtFQUVOLEdBQUcsQ0FBQyxTQUFVLENBQUEsQ0FBQSxDQUFFLFFBQUEsQ0FBQSxJQUFBLEVBQUEsTUFBQTtJQUNkLElBQUcsSUFBSSxDQUFBLFdBQUcsQ0FBQSxHQUFBLENBQUcsTUFBYjtNQUF5QixJQUFLLENBQUEsQ0FBQSxDQUFFLElBQUksQ0FBQyxNQUFNLEdBQUQ7O0lBRTFDLElBQUcsQ0FBSSxJQUFJLENBQUMsTUFBWjtNQUF3QixNQUFBLENBQU8sTUFBUDtLQUN4QjthQUFLLEdBQUcsQ0FBQyxVQUFVLE1BQU0sQ0FBQyxLQUFLLElBQUQsR0FBUSxNQUFNLENBQUMsTUFBTSxDQUFDLElBQVIsQ0FBYSxJQUFBLENBQWIsQ0FBekI7OztFQUdyQixHQUFHLENBQUMsU0FBVSxDQUFBLENBQUEsQ0FBRSxRQUFBLENBQUEsS0FBQTs7SUFDWixjQUFlLENBQUEsQ0FBQSxDQUFFLFFBQUEsQ0FBQSxLQUFBO2FBQ2Y7UUFBQSxPQUFPLEtBQUssQ0FBQztRQUNiLE1BQU0sS0FBSyxDQUFDO1FBQ1osU0FBUyxLQUFLLENBQUM7TUFGZjs7SUFJRixRQUFPLEtBQUssQ0FBQyxXQUFiO0FBQUEsSUFDSSxLQUFBLEtBQUE7QUFBQSxhQUFTLGVBQWUsS0FBQTs7YUFDWDtRQUFFLE1BQU0sS0FBSyxDQUFDLFdBQVcsQ0FBQztRQUFNLFNBQVMsT0FBTyxLQUFEO01BQS9DOzs7RUFFckIsR0FBRyxDQUFDLElBQUssQ0FBQSxDQUFBLENBQUUsUUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBO1dBQVUsV0FBVyxHQUFHLENBQUg7O0VBRWhDLEdBQUcsQ0FBQyxJQUFLLENBQUEsQ0FBQSxDQUFFLFFBQUEsQ0FBQSxDQUFBOztJQUNMLEdBQUksQ0FBQSxDQUFBLENBQUU7V0FDTixRQUFBLENBQUE7O01BQUk7TUFDRixJQUFHLEdBQUcsQ0FBQyxPQUFQO2VBQW9CLEdBQUcsQ0FBQztPQUN4QjtlQUFLLEdBQUcsQ0FBQyxPQUFRLENBQUEsQ0FBQSxDQUFFLENBQUMsQ0FBQyxNQUFNLE1BQUcsSUFBSDs7OztFQU1uQyxNQUFNLENBQUMsT0FBUSxDQUFBLENBQUEsQ0FBRSxNQUFNLENBQUMsT0FBTyxLQUFLLE1BQUwiLCJzb3VyY2VzQ29udGVudCI6WyIjIGF1dG9jb21waWxlXG5cbnJlcXVpcmUhIHsgbG9kYXNoIH1cblxubGliID0ge31cblxubGliLmpzb25RdWVyeSA9IChwYXRoLCBvYmplY3QpIC0+IFxuICBpZiBwYXRoQEAgaXMgU3RyaW5nIHRoZW4gcGF0aCA9IHBhdGguc3BsaXQoJy4nKVxuXG4gIGlmIG5vdCBwYXRoLmxlbmd0aCB0aGVuIHJldHVybiBvYmplY3RcbiAgZWxzZSBsaWIuanNvblF1ZXJ5IGxvZGFzaC50YWlsKHBhdGgpLCBvYmplY3RbbG9kYXNoLmhlYWQgcGF0aF1cbiAgICAgIFxuXG5saWIuanNvbkVycm9yID0gKGVycm9yKSAtPlxuICAgIHNlcmlhbGl6ZUVycm9yID0gKGVycm9yKSAtPiBkb1xuICAgICAgc3RhY2s6IGVycm9yLnN0YWNrXG4gICAgICBuYW1lOiBlcnJvci5uYW1lXG4gICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlXG4gICAgXG4gICAgc3dpdGNoIGVycm9yLmNvbnN0cnVjdG9yXG4gICAgICB8IEVycm9yID0+IHNlcmlhbGl6ZUVycm9yIGVycm9yXG4gICAgICB8IG90aGVyd2lzZSA9PiB7IG5hbWU6IGVycm9yLmNvbnN0cnVjdG9yLm5hbWUsIG1lc3NhZ2U6IFN0cmluZyhlcnJvcikgfVxuXG5saWIud2FpdCA9ICh0LCBmKSAtPiBzZXRUaW1lb3V0IGYsIHRcblxubGliLmxhenkgPSAoZikgLT5cbiAgICAgIHJlcyA9IHt9XG4gICAgICAoLi4uYXJncykgLT5cbiAgICAgICAgaWYgcmVzLnByb21pc2UgdGhlbiByZXMucHJvbWlzZVxuICAgICAgICBlbHNlIHJlcy5wcm9taXNlID0gZi5hcHBseSBALCBhcmdzXG5cblxuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBsb2Rhc2guYXNzaWduIGxpYiwgbG9kYXNoXG5cbiJdfQ==
